apiVersion: apps/v1
kind: Deployment
metadata:
  name: econsulatbusiness
spec:
  replicas: 1
  selector:
    matchLabels:
      app: econsulatbusiness
      version: 'v1'
  template:
    metadata:
      labels:
        app: econsulatbusiness
        version: 'v1'
    spec:
      hostAliases:
        {{- if .Values.econsulatbusiness.hostAliases }}
        {{ toYaml .Values.econsulatbusiness.hostAliases | nindent 8 }}
        {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - econsulatbusiness
                topologyKey: kubernetes.io/hostname
              weight: 100
      initContainers:
        - name: init-ds
          image: busybox:latest
          command:
            - '/bin/sh'
            - '-c'
            - |
              while true
              do
                rt=$(nc -z -w 1 econsulatbusiness-postgresql 5432)
                if [ $? -eq 0 ]; then
                  echo "DB is UP"
                  break
                fi
                echo "DB is not yet reachable;sleep for 10s before retry"
                sleep 10
              done
      containers:
        - name: econsulatbusiness-app
          image: {{ .Values.econsulatbusiness.image.repository }}:{{ .Values.econsulatbusiness.image.tag }}
          imagePullPolicy: {{ .Values.econsulatbusiness.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.econsulatbusiness.env }}
            - name: {{ $key }}
              value: {{ quote $value }}
            {{- end }}
          resources:
            requests:
              {{- toYaml .Values.econsulatbusiness.resources.requests | nindent 14 }}
            limits:
              {{- toYaml .Values.econsulatbusiness.resources.limits | nindent 14 }}
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            {{- toYaml .Values.econsulatbusiness.readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.econsulatbusiness.livenessProbe | nindent 12 }}

